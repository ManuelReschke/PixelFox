package admin_views

import (
	"github.com/ManuelReschke/PixelFox/app/models"
	"strconv"
	"time"
)

// Format time to a readable string
func formatTime(t time.Time) string {
	return t.Format("2006-01-02 15:04")
}

templ UserManagement(users []models.User) {
	<div class="container mx-auto px-4 py-8">
		<div class="flex justify-between items-center mb-6">
			<div>
				<h1 class="text-3xl font-bold text-gray-800 mb-2">User Management</h1>
				<p class="text-gray-600">Manage users of your PixelFox application</p>
			</div>
			<div>
				<a href="/admin" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-gray-700 bg-gray-100 hover:bg-gray-200">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
					</svg>
					Back to Dashboard
				</a>
			</div>
		</div>

		<!-- User Table -->
		<div class="bg-white shadow-md rounded-lg overflow-hidden">
			<table class="min-w-full divide-y divide-gray-200">
				<thead class="bg-gray-50">
					<tr>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Login</th>
						<th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
					</tr>
				</thead>
				<tbody class="bg-white divide-y divide-gray-200">
					if len(users) == 0 {
						<tr>
							<td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">No users found</td>
						</tr>
					} else {
						for _, user := range users {
							<tr>
								<td class="px-6 py-4 whitespace-nowrap">
									<div class="flex items-center">
										<div class="flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-500">
											{ string(user.Name[0]) }
										</div>
										<div class="ml-4">
											<div class="text-sm font-medium text-gray-900">{ user.Name }</div>
											<div class="text-sm text-gray-500">{ user.Email }</div>
										</div>
									</div>
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									if user.Role == "admin" {
										<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-purple-100 text-purple-800">
											Admin
										</span>
									} else {
										<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
											User
										</span>
									}
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									if user.Status == "active" {
										<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
											Active
										</span>
									} else if user.Status == "inactive" {
										<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
											Inactive
										</span>
									} else {
										<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
											Disabled
										</span>
									}
								</td>
								<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
									{ formatTime(user.CreatedAt) }
								</td>
								<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
									if user.LastLoginAt != nil {
										{ formatTime(*user.LastLoginAt) }
									} else {
										Never
									}
								</td>
								<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
									<a href={ templ.SafeURL("/admin/users/edit/" + strconv.FormatUint(uint64(user.ID), 10)) } class="text-blue-600 hover:text-blue-900 mr-3">Edit</a>
									<a href={ templ.SafeURL("/admin/users/delete/" + strconv.FormatUint(uint64(user.ID), 10)) } class="text-red-600 hover:text-red-900" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>
}
