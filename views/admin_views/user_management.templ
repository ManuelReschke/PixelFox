package admin_views

import (
	"github.com/ManuelReschke/PixelFox/app/models"
	"strconv"
	"time"
)

// Format time to a readable string
func formatTime(t time.Time) string {
	return t.Format("2006-01-02 15:04")
}

templ userManagementContent(users []models.User) {
	<div class="mb-6">
		<div>
			<h1 class="text-3xl font-bold text-gray-800 mb-2">Benutzerverwaltung</h1>
			<p class="text-gray-600">Verwalte die Benutzer deiner PixelFox-Anwendung</p>
		</div>
	</div>

	<!-- User Table -->
	<div class="bg-white shadow-md rounded-lg overflow-hidden">
		<table class="min-w-full divide-y divide-gray-200">
			<thead class="bg-gray-50">
				<tr>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Benutzer</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rolle</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Erstellt</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Letzter Login</th>
					<th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Aktionen</th>
				</tr>
			</thead>
			<tbody class="bg-white divide-y divide-gray-200">
				if len(users) == 0 {
					<tr>
						<td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">Keine Benutzer gefunden</td>
					</tr>
				} else {
					for _, user := range users {
						<tr>
							<td class="px-6 py-4 whitespace-nowrap">
								<div class="flex items-center">
									<div class="flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-500">
										{ string(user.Name[0]) }
									</div>
									<div class="ml-4">
										<div class="text-sm font-medium text-gray-900">{ user.Name }</div>
										<div class="text-sm text-gray-500">{ user.Email }</div>
									</div>
								</div>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								if user.Role == "admin" {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-purple-100 text-purple-800">
										Admin
									</span>
								} else {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
										User
									</span>
								}
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								if user.Status == "active" {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
										Aktiv
									</span>
								} else if user.Status == "inactive" {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
										Inaktiv
									</span>
								} else {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
										Deaktiviert
									</span>
								}
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
								{ formatTime(user.CreatedAt) }
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
								if user.LastLoginAt != nil {
									{ formatTime(*user.LastLoginAt) }
								} else {
									Nie
								}
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
								<a href={ templ.SafeURL("/admin/users/edit/" + strconv.FormatUint(uint64(user.ID), 10)) } class="text-blue-600 hover:text-blue-900 mr-3">Bearbeiten</a>
								<a href={ templ.SafeURL("/admin/users/delete/" + strconv.FormatUint(uint64(user.ID), 10)) } class="text-red-600 hover:text-red-900" onclick="return confirm('Bist du sicher, dass du diesen Benutzer löschen möchtest?');">Löschen</a>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
}

templ UserManagement(users []models.User) {
	@AdminLayout(userManagementContent(users))
}