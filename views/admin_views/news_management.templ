package admin_views

import (
	"github.com/ManuelReschke/PixelFox/app/models"
	"strconv"
	"time"
)

// Format time to a readable string
func formatNewsTime(t time.Time) string {
	return t.Format("02.01.2006 15:04")
}

templ newsManagementContent(newsList []models.News) {
	<div class="mb-6 flex justify-between items-center">
		<div>
			<h1 class="text-3xl font-bold mb-2">News-Verwaltung</h1>
			<p class="opacity-75">Verwalte die News-Artikel deiner PixelFox-Anwendung</p>
		</div>
		<div>
			<a href="/admin/news/create" class="btn btn-primary">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
				</svg>
				Neuen Artikel erstellen
			</a>
		</div>
	</div>

	<!-- News Table -->
	<div class="bg-base-200 shadow-md rounded-lg overflow-hidden">
		<table class="min-w-full divide-y divide-base-300">
			<thead class="bg-base-300">
				<tr>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium opacity-75 uppercase tracking-wider">Titel</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium opacity-75 uppercase tracking-wider">Autor</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium opacity-75 uppercase tracking-wider">Status</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium opacity-75 uppercase tracking-wider">Erstellt</th>
					<th scope="col" class="px-6 py-3 text-left text-xs font-medium opacity-75 uppercase tracking-wider">Aktualisiert</th>
					<th scope="col" class="px-6 py-3 text-right text-xs font-medium opacity-75 uppercase tracking-wider">Aktionen</th>
				</tr>
			</thead>
			<tbody class="divide-y divide-base-300">
				if len(newsList) == 0 {
					<tr>
						<td colspan="6" class="px-6 py-4 text-center text-sm opacity-75">Keine News-Artikel gefunden</td>
					</tr>
				} else {
					for _, news := range newsList {
						<tr>
							<td class="px-6 py-4">
								<div class="text-sm font-medium">{ news.Title }</div>
								<div class="text-sm opacity-75">{ "/news/" + news.Slug }</div>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								<div class="text-sm">{ news.User.Name }</div>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								if news.Published {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
										Veröffentlicht
									</span>
								} else {
									<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
										Entwurf
									</span>
								}
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm opacity-75">
								{ formatNewsTime(news.CreatedAt) }
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm opacity-75">
								{ formatNewsTime(news.UpdatedAt) }
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
								<div class="flex items-center justify-end space-x-3">
									<a href={ templ.SafeURL("/news/" + news.Slug) } target="_blank" class="inline-flex items-center">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 opacity-75 hover:opacity-100" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
										</svg>
									</a>
									<a href={ templ.SafeURL("/admin/news/edit/" + strconv.FormatUint(news.ID, 10)) } class="inline-flex items-center">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-600 hover:text-blue-900" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536M4 20h4.586a1 1 0 00.707-.293l9.828-9.828a1 1 0 000-1.414L14 3.586a1 1 0 00-1.414 0L3.758 12.414A1 1 0 003.465 13.12V18a2 2 0 002 2z" />
										</svg>
									</a>
									<form action={ templ.SafeURL("/admin/news/delete/" + strconv.FormatUint(news.ID, 10)) } method="GET" class="inline-block">
										<button type="button" onclick={ templ.ComponentScript{Call: "event.preventDefault(); Swal.fire({title:'Artikel wirklich löschen?', icon:'warning', showCancelButton:true, confirmButtonText:'Ja, löschen', cancelButtonText:'Abbrechen'}).then((result)=>{ if(result.isConfirmed){ this.closest('form').submit() } });"}  } class="inline-flex items-center text-red-600 hover:text-red-900">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
											</svg>
										</button>
									</form>
								</div>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
}

templ NewsManagement(newsList []models.News) {
	@AdminLayout(newsManagementContent(newsList))
}
