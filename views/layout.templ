package views

import (
	"github.com/ManuelReschke/PixelFox/views/partials"
    "github.com/ManuelReschke/PixelFox/internal/pkg/viewmodel"
    "github.com/ManuelReschke/PixelFox/app/models"
)

const APP_NAME = "PIXELFOX.cc"

templ Layout(layout viewmodel.Layout) {
	<!DOCTYPE html>
	<html lang="de" data-theme="emerald">
		<head>
			<meta charset="UTF-8"/>
			<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="description" content={ models.GetAppSettings().GetSiteDescription() } />
			<meta name="google" content="notranslate"/>
			<title>{ models.GetAppSettings().GetSiteTitle() } { layout.Page }</title>
			<link rel="icon" type="image/png" href="/icons/favicon-96x96.png" sizes="96x96" />
            <link rel="icon" type="image/svg+xml" href="/icons/favicon.svg" />
            <link rel="shortcut icon" href="/icons/favicon.ico" />
            <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png" />
            <meta name="apple-mobile-web-app-title" content="Pixelfox" />
            <link rel="manifest" href="/manifest.json" />
			
			<!-- Open Graph / Social Media Meta Tags -->
			if layout.OGViewModel != nil {
				<meta property="og:type" content="website" />
				<meta property="og:url" content={ layout.OGViewModel.URL } />
				<meta property="og:image" content={ layout.OGViewModel.Image } />
				<meta property="og:image:alt" content={ layout.OGViewModel.Title } />
				<meta property="og:title" content={ layout.OGViewModel.Title } />
				<meta property="og:description" content={ layout.OGViewModel.Description } />
				<meta property="og:site_name" content="PIXELFOX.cc" />
				
				<!-- Twitter Card Tags -->
				<meta name="twitter:card" content="summary_large_image" />
				<meta name="twitter:image" content={ layout.OGViewModel.Image } />
				<meta name="twitter:title" content={ layout.OGViewModel.Title } />
				<meta name="twitter:description" content={ layout.OGViewModel.Description } />
			}
			
			<!-- Lokal kompilierte CSS und JavaScript Dateien -->
			<link rel="stylesheet" href="/css/styles.css"/>
			<script src="/js/htmx.min.js"></script>
			<script src="/js/_hyperscript.min.js"></script>
			<script src="/js/response-targets.js"></script>
			<script src="/js/sweetalert2.all.min.js"></script>
			<!-- External libs loaded once for all pages to avoid HTMX boost duplicates -->
			<script src="/js/clipboard.min.js"></script>
			<!-- Lightweight loader; only initializes CKEditor when #content present -->
			<script src="/js/editor.js"></script>
			<script src="/js/storage-pool-form.js"></script>
			<script src="/js/admin-dashboard.js"></script>
			<!-- Image viewer logic used on image pages; safe to load globally -->
			<script src="/js/image-viewer.js"></script>
			<script src="/js/app.js"></script>
		</head>
		<body class="sample-transition flex flex-col min-h-screen" hx-boost="true">
			<header>
				if !layout.IsError {
					@partials.Navbar(APP_NAME, layout)
				}
			</header>

			<main class={ templ.KV("pt-24 flex-grow", !layout.IsError) }>
                @partials.FlashMessages(layout.Msg)
				{ children... }
			</main>

			if !layout.IsError {
				@partials.Footer()
			}
		</body>
	</html>
}
