package user_views

import (
	"github.com/ManuelReschke/PixelFox/views"
	"github.com/ManuelReschke/PixelFox/internal/pkg/viewmodel"
	"github.com/ManuelReschke/PixelFox/app/models"
	"github.com/ManuelReschke/PixelFox/internal/pkg/utils"
	"fmt"

	"github.com/gofiber/fiber/v2"
)

// formatBytes formats bytes to a human-readable string (KB, MB, GB)
func formatBytes(bytes int64) string {
	const unit = 1024
	if bytes < unit {
		return fmt.Sprintf("%d B", bytes)
	}
	div, exp := int64(unit), 0
	for n := bytes / unit; n >= unit; n /= unit {
		div *= unit
		exp++
	}
	return fmt.Sprintf("%.1f %cB", float64(bytes)/float64(div), "KMGTPE"[exp])
}

templ ProfileIndex(username string, csrfToken string, user models.User, imageCount int, albumCount int, storageUsage int64) {
	<!-- Hero Section with animated gradient -->
	<div class="relative min-h-screen overflow-hidden">
		<!-- Animated background -->
		<div class="absolute inset-0 bg-gradient-to-br from-primary/20 via-secondary/10 to-accent/20 animate-pulse"></div>
		<div class="absolute top-0 -left-4 w-72 h-72 bg-primary/30 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse"></div>
		<div class="absolute top-0 -right-4 w-72 h-72 bg-secondary/30 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse" style="animation-delay: 2s"></div>
		<div class="absolute -bottom-8 left-20 w-72 h-72 bg-accent/30 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse" style="animation-delay: 4s"></div>
		
		<!-- Main content -->
		<div class="relative container mx-auto px-6 py-16">
			<!-- Hero Profile Card -->
			<div class="max-w-6xl mx-auto">
				<!-- Profile Header -->
				<div class="text-center mb-12 animate-fade-in">
					<div class="flex flex-col items-center mb-8">
						<div class="w-32 h-32 relative group cursor-pointer transform hover:scale-105 transition-all duration-500 mb-4">
							<div class="absolute inset-0 bg-gradient-to-r from-primary to-secondary rounded-full blur opacity-60 group-hover:opacity-100 transition-opacity duration-500"></div>
							<img 
								src={ utils.GetGravatarURL(user.Email, 300) } 
								alt={ username } 
								class="relative w-full h-full rounded-full object-cover border-4 border-white shadow-2xl animate-float"
							/>
							<a href="https://gravatar.com" target="_blank" class="absolute inset-0 bg-black/60 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 backdrop-blur-sm">
								<div class="text-center text-white">
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-8 h-8 mx-auto mb-1">
										<path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
									</svg>
									<span class="text-xs font-medium">Bearbeiten</span>
								</div>
							</a>
						</div>
						<!-- Centered badge under avatar -->
						<div class="flex justify-center">
							if user.Status == "active" {
								<div class="badge badge-success gap-2 shadow-lg animate-bounce flex items-center">
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-4 h-4">
										<path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
									</svg>
									Verifiziert
								</div>
							} else {
								<div class="badge badge-warning gap-2 shadow-lg animate-pulse flex items-center">
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-4 h-4">
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z" />
									</svg>
									Nicht verifiziert
								</div>
							}
						</div>
					</div>
					<h1 class="text-5xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent mb-4">
						{ username }
					</h1>
					<p class="text-xl text-base-content/70 mb-2">{ user.Email }</p>
					<div class="flex items-center justify-center gap-2 text-base-content/60">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
							<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5" />
						</svg>
						<span>Mitglied seit { user.CreatedAt.Format("02.01.2006") }</span>
					</div>
				</div>

				<!-- Stats Grid -->
				<div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
					<!-- Images Stats -->
					<div class="card bg-gradient-to-br from-primary/10 to-primary/5 backdrop-blur-xl border border-white/20 shadow-2xl hover:shadow-3xl hover:scale-105 transition-all duration-500 group">
						<div class="card-body items-center text-center relative overflow-hidden">
							<div class="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-primary to-secondary"></div>
							<div class="p-4 bg-primary/20 rounded-full mb-4 group-hover:scale-110 transition-transform duration-300">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-12 h-12 text-primary">
									<path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
								</svg>
							</div>
							<h3 class="text-3xl font-bold text-primary mb-2 counter" data-target={ fmt.Sprintf("%d", imageCount) }>0</h3>
							<p class="text-base-content/70 font-medium">Bilder hochgeladen</p>
							<div class="absolute -bottom-6 -right-6 w-20 h-20 bg-primary/10 rounded-full blur-xl"></div>
						</div>
					</div>

					<!-- Albums Stats -->
					<div class="card bg-gradient-to-br from-secondary/10 to-secondary/5 backdrop-blur-xl border border-white/20 shadow-2xl hover:shadow-3xl hover:scale-105 transition-all duration-500 group" style="animation-delay: 0.2s">
						<div class="card-body items-center text-center relative overflow-hidden">
							<div class="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-secondary to-accent"></div>
							<div class="p-4 bg-secondary/20 rounded-full mb-4 group-hover:scale-110 transition-transform duration-300">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-12 h-12 text-secondary">
									<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12.75V12A2.25 2.25 0 0 1 4.5 9.75h15A2.25 2.25 0 0 1 21.75 12v.75m-8.69-6.44-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z" />
								</svg>
							</div>
							<h3 class="text-3xl font-bold text-secondary mb-2 counter" data-target={ fmt.Sprintf("%d", albumCount) }>0</h3>
							<p class="text-base-content/70 font-medium">Alben erstellt</p>
							<div class="absolute -bottom-6 -right-6 w-20 h-20 bg-secondary/10 rounded-full blur-xl"></div>
						</div>
					</div>

					<!-- Storage Stats -->
					<div class="card bg-gradient-to-br from-accent/10 to-accent/5 backdrop-blur-xl border border-white/20 shadow-2xl hover:shadow-3xl hover:scale-105 transition-all duration-500 group" style="animation-delay: 0.4s">
						<div class="card-body items-center text-center relative overflow-hidden">
							<div class="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-accent to-primary"></div>
							<div class="p-4 bg-accent/20 rounded-full mb-4 group-hover:scale-110 transition-transform duration-300">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-12 h-12 text-accent">
									<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 14.25h13.5m-13.5 0a3 3 0 0 1-3-3m3 3a3 3 0 1 0 0 6h13.5a3 3 0 1 0 0-6m-16.5-3a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3m-19.5 0a4.5 4.5 0 0 1 .9-2.7L5.737 5.1a3.375 3.375 0 0 1 2.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 0 1 .9 2.7m0 0a3 3 0 0 1-3 3m0 3h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Z" />
								</svg>
							</div>
							<h3 class="text-3xl font-bold text-accent mb-2">{ formatBytes(storageUsage) }</h3>
							<p class="text-base-content/70 font-medium">Speicher genutzt</p>
							<div class="absolute -bottom-6 -right-6 w-20 h-20 bg-accent/10 rounded-full blur-xl"></div>
						</div>
					</div>
				</div>

				<!-- Activity Timeline -->
				<div class="card bg-base-100/80 backdrop-blur-xl border border-white/20 shadow-2xl mb-12">
					<div class="card-body">
						<h2 class="card-title text-2xl mb-6 flex items-center gap-3">
							<div class="w-8 h-8 bg-gradient-to-r from-primary to-secondary rounded-full flex items-center justify-center">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 text-white">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
								</svg>
							</div>
							Account Aktivit√§t
						</h2>
						<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
							<div class="flex items-center gap-4 p-4 rounded-xl bg-base-200/50 hover:bg-base-200/80 transition-colors duration-300">
								<div class="w-12 h-12 bg-success/20 rounded-full flex items-center justify-center">
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6 text-success">
										<path stroke-linecap="round" stroke-linejoin="round" d="M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z" />
									</svg>
								</div>
								<div>
									<p class="font-semibold">Account erstellt</p>
									<p class="text-sm text-base-content/60">{ user.CreatedAt.Format("02. Januar 2006") }</p>
								</div>
							</div>
							if user.LastLoginAt != nil {
								<div class="flex items-center gap-4 p-4 rounded-xl bg-base-200/50 hover:bg-base-200/80 transition-colors duration-300">
									<div class="w-12 h-12 bg-info/20 rounded-full flex items-center justify-center">
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6 text-info">
											<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 9V5.25A2.25 2.25 0 0 1 10.5 3h6a2.25 2.25 0 0 1 2.25 2.25v13.5A2.25 2.25 0 0 1 16.5 21h-6a2.25 2.25 0 0 1-2.25-2.25V15M12 9l3 3m0 0-3 3m3-3H2.25" />
										</svg>
									</div>
									<div>
										<p class="font-semibold">Letzter Login</p>
										<p class="text-sm text-base-content/60">{ user.LastLoginAt.Format("02. Januar 2006, 15:04 Uhr") }</p>
									</div>
								</div>
							}
						</div>
					</div>
				</div>

				<!-- Action Buttons -->
				<div class="flex flex-col sm:flex-row justify-center gap-4">
					<a href="/user/profile/edit" class="btn btn-warning btn-lg gap-3 hover:scale-105 transition-transform duration-300 shadow-xl">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
						</svg>
						Profil bearbeiten
					</a>
					<a href="/user/settings" class="btn btn-secondary btn-lg gap-3 hover:scale-105 transition-transform duration-300 shadow-xl">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z" />
							<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
						</svg>
						App Einstellungen
					</a>
					<a href="/user/images" class="btn btn-primary btn-lg gap-3 hover:scale-105 transition-transform duration-300 shadow-xl">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
						</svg>
						Meine Bilder
					</a>
					<a href="/user/albums" class="btn btn-accent btn-lg gap-3 hover:scale-105 transition-transform duration-300 shadow-xl">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12.75V12A2.25 2.25 0 0 1 4.5 9.75h15A2.25 2.25 0 0 1 21.75 12v.75m-8.69-6.44-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z" />
						</svg>
						Meine Alben
					</a>
				</div>
			</div>
		</div>
	</div>

	<!-- Custom animations and scripts -->
	<style>
		@keyframes float {
			0%, 100% { transform: translateY(0px); }
			50% { transform: translateY(-10px); }
		}
		
		@keyframes fade-in {
			from { opacity: 0; transform: translateY(30px); }
			to { opacity: 1; transform: translateY(0); }
		}
		
		.animate-float {
			animation: float 6s ease-in-out infinite;
		}
		
		.animate-fade-in {
			animation: fade-in 1s ease-out;
		}
		
		/* Glassmorphism effects */
		.backdrop-blur-xl {
			backdrop-filter: blur(16px);
		}
	</style>

	<script>
		// Counter animation
		document.addEventListener('DOMContentLoaded', function() {
			const counters = document.querySelectorAll('.counter');
			
			counters.forEach(counter => {
				const target = parseInt(counter.getAttribute('data-target'));
				const increment = target / 50;
				let current = 0;
				
				const timer = setInterval(() => {
					current += increment;
					counter.textContent = Math.floor(current);
					
					if (current >= target) {
						counter.textContent = target;
						clearInterval(timer);
					}
				}, 50);
			});
		});
	</script>
}

templ Profile(
	page string,
	fromProtected bool,
	isError bool,
	msg fiber.Map,
	username string,
	cmp templ.Component,
	isAdmin bool,
) {
 	@views.Layout(viewmodel.Layout{
         Page:          page,
         FromProtected: fromProtected,
         IsError:       isError,
         Msg:           msg,
         Username:      username,
         IsAdmin:       isAdmin,
         OGViewModel:   nil,
     }) {
 		@cmp
 	}
}
