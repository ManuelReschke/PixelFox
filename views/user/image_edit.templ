package user_views

import (
    "fmt"
    "github.com/ManuelReschke/PixelFox/app/models"
    "github.com/ManuelReschke/PixelFox/internal/pkg/imageprocessor"
)

// Format file size to human-readable format
func formatFileSize(size int64) string {
    const unit = 1024
    if size < unit {
        return fmt.Sprintf("%d B", size)
    }
    div, exp := int64(unit), 0
    for n := size / unit; n >= unit; n /= unit {
        div *= unit
        exp++
    }
    return fmt.Sprintf("%.1f %cB", float64(size)/float64(div), "KMGTPE"[exp])
}

templ ImageEditContent(image models.Image, csrfToken string) {
    <div class="container mx-auto px-4 py-8">
        <div class="mb-6">
            <div class="flex justify-between items-center">
                <h1 class="text-2xl font-bold">Bild bearbeiten</h1>
                <div class="flex space-x-2">
                    <a href="/user/images" class="btn btn-outline">Zurück zu meinen Bildern</a>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Image Preview -->
            <div class="bg-base-100 shadow-md rounded-lg p-6">
                <h2 class="text-lg font-semibold mb-4 text-base-content">Bildvorschau</h2>
                <div class="flex justify-center">
                    <img class="max-w-full h-auto rounded-lg" 
                        src={ imageprocessor.GetImageURL(&image, "webp", "medium") } 
                        alt={ image.Title }/>
                </div>
                
                <div class="mt-4">
                    <h3 class="text-md font-medium mb-2 text-base-content">Bildinformationen</h3>
                    <div class="text-sm text-base-content opacity-75">
                        <p><span class="font-medium">UUID:</span> { image.UUID }</p>
                        <p><span class="font-medium">Typ:</span> { image.FileType }</p>
                        <p><span class="font-medium">Größe:</span> { formatFileSize(image.FileSize) }</p>
                        <p><span class="font-medium">Abmessungen:</span> { fmt.Sprintf("%dx%d", image.Width, image.Height) }</p>
                        <p><span class="font-medium">Hochgeladen am:</span> { image.CreatedAt.Format("02.01.2006 15:04") }</p>
                        <p><span class="font-medium">Aufrufe:</span> { fmt.Sprintf("%d", image.ViewCount) }</p>
                        <p><span class="font-medium">Downloads:</span> { fmt.Sprintf("%d", image.DownloadCount) }</p>
                        <p>
                            <span class="font-medium">Sichtbarkeit:</span>
                            if image.IsPublic {
                                <span class="badge badge-success badge-xs ml-1">Öffentlich</span>
                            } else {
                                <span class="badge badge-warning badge-xs ml-1 flex items-center gap-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-2.5 w-2.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                    </svg>
                                    Privat
                                </span>
                            }
                        </p>
                    </div>
                </div>

                <div class="mt-4">
                    <h3 class="text-md font-medium mb-2 text-base-content">Links</h3>
                    <div class="text-sm text-base-content opacity-75">
                        <p>
                            <span class="font-medium">Bild ansehen:</span> 
                            <a href={ templ.SafeURL("/image/" + image.UUID) } target="_blank" class="text-primary hover:underline">Öffnen</a>
                        </p>
                        <p>
                            <span class="font-medium">Teilen-Link:</span> 
                            <a href={ templ.SafeURL("/i/" + image.ShareLink) } target="_blank" class="text-primary hover:underline">{ image.ShareLink }</a>
                        </p>
                    </div>
                </div>
            </div>

            <!-- Edit Form -->
            <div class="md:col-span-2 bg-base-100 shadow-md rounded-lg p-6">
                <h2 class="text-lg font-semibold mb-4 text-base-content">Bilddetails bearbeiten</h2>
                <form action={ templ.SafeURL("/user/images/update/" + image.UUID) } method="POST" class="space-y-4">
                    @csrf(csrfToken)
                    
                    <!-- Title -->
                    <div class="form-control">
                        <label for="title" class="label">
                            <span class="label-text">Titel</span>
                        </label>
                        <input type="text" id="title" name="title" value={ image.Title } 
                            class="input input-bordered w-full" required />
                    </div>

                    <!-- Description -->
                    <div class="form-control">
                        <label for="description" class="label">
                            <span class="label-text">Beschreibung</span>
                        </label>
                        <textarea id="description" name="description" rows="4" 
                            class="textarea textarea-bordered w-full">{ image.Description }</textarea>
                    </div>

                    <!-- Public Status -->
                    <div class="form-control">
                        <label class="label cursor-pointer justify-start">
                            if image.IsPublic {
                                <input type="checkbox" id="is_public" name="is_public" checked 
                                    class="checkbox checkbox-primary mr-3" />
                            } else {
                                <input type="checkbox" id="is_public" name="is_public" 
                                    class="checkbox checkbox-primary mr-3" />
                            }
                            <span class="label-text">Öffentliches Bild</span>
                        </label>
                        <label class="label">
                            <span class="label-text-alt">Wenn aktiviert, ist das Bild öffentlich zugänglich. Andernfalls nur über den Teilen-Link erreichbar.</span>
                        </label>
                    </div>

                    <!-- Submit Button -->
                    <div class="flex justify-between mt-6">
                        <button type="submit" class="btn btn-primary">
                            Bild aktualisieren
                        </button>
                        
                        <a href={ templ.SafeURL("/user/images/delete/" + image.UUID) } 
                            class="btn btn-error"
                            onclick="return confirm('Bist du sicher, dass du dieses Bild löschen möchtest? Diese Aktion kann nicht rückgängig gemacht werden.');">
                            Bild löschen
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

templ UserImageEdit(image models.Image, csrfToken string) {
    @ImageEditContent(image, csrfToken)
}

templ csrf(csrfToken string) {
    <input type="hidden" name="_csrf" value={csrfToken} />
}
