package user_views

import (
    "github.com/ManuelReschke/PixelFox/views"
    "github.com/ManuelReschke/PixelFox/internal/pkg/viewmodel"

    "github.com/gofiber/fiber/v2"
)

templ SettingsIndex(
    username string,
    csrfToken string,
    plan string,
    canOrig bool,
    canWebp bool,
    canAvif bool,
    prefOrig bool,
    prefWebp bool,
    prefAvif bool,
    newAPIKey string,
    hasAPIKey bool,
    maskedAPIKey string,
    apiKeyCreated string,
    apiKeyLastUsed string,
) {
    <section class="card w-fit bg-base-200 shadow-xl mx-auto mb-8">
        <div class="card-body pb-2">
            <h1 class="card-title border-b border-b-slate-600 pb-[4px]">
                Einstellungen
            </h1>
            <div class="rounded-xl drop-shadow-xl flex flex-col gap-4 w-96 p-8">
                {{
                    planClass := "badge-ghost badge-outline"
                    planLabel := "Free"
                    if plan == "premium" {
                        planClass = "badge-primary"
                        planLabel = "Premium"
                    } else if plan == "premium_max" {
                        planClass = "badge-accent"
                        planLabel = "Premium‑Max"
                    }
                }}
                <div class="flex items-center justify-between mb-4">
                    <div class="flex items-center gap-3">
                        <div class="avatar placeholder">
                            <div class="bg-neutral text-neutral-content rounded-full w-10">
                                <span class="text-lg">⚙</span>
                            </div>
                        </div>
                        <div>
                            <h2 class="text-xl font-semibold">Einstellungen</h2>
                            <p class="text-sm opacity-70">Angemeldet als { username }</p>
                        </div>
                    </div>
                <div class="flex flex-col items-end gap-1 text-right">
                    <span class="text-xs opacity-70">Paket</span>
                    <div class={ templ.KV("badge "+planClass, true) }>{ planLabel }</div>
                </div>
                
                </div>

                <div class="divider"></div>

                <!-- Darstellung / Theme -->
                <div class="form-control">
                    <h3 class="text-lg font-medium mb-4">Darstellung</h3>
                    <label class="label cursor-pointer">
                        <span class="label-text">Dunkles Theme</span>
                        <input id="theme-toggle" type="checkbox" class="toggle toggle-primary" />
                    </label>
                </div>

                <div class="divider"></div>

                <form method="POST" action="/user/settings">
                    <input type="hidden" name="_csrf" value={ csrfToken }>
                    <div class="form-control">
                        <h3 class="text-lg font-medium mb-2">Thumbnails</h3>
                        {{
                            origTitle := ""
                            if !canOrig { origTitle = "Upgrade erforderlich oder global deaktiviert" }
                            webpTitle := ""
                            if !canWebp { webpTitle = "Upgrade erforderlich oder global deaktiviert" }
                            avifTitle := ""
                            if !canAvif { avifTitle = "Upgrade erforderlich oder global deaktiviert" }
                        }}
                        <label class="label cursor-pointer" title={ origTitle }>
                            <span class="label-text">Original‑Format</span>
                            if prefOrig {
                                <input type="checkbox" name="pref_thumb_original" class="toggle toggle-primary" checked disabled?={!canOrig} />
                            } else {
                                <input type="checkbox" name="pref_thumb_original" class="toggle toggle-primary" disabled?={!canOrig} />
                            }
                        </label>
                        <div class="text-xs opacity-70 ml-1 -mt-2 mb-2">Originalformat, keine zusätzliche Komprimierung.</div>
                        <label class="label cursor-pointer" title={ webpTitle }>
                            <span class="label-text">WebP</span>
                            if prefWebp {
                                <input type="checkbox" name="pref_thumb_webp" class="toggle toggle-primary" checked disabled?={!canWebp} />
                            } else {
                                <input type="checkbox" name="pref_thumb_webp" class="toggle toggle-primary" disabled?={!canWebp} />
                            }
                        </label>
                        <div class="text-xs opacity-70 ml-1 -mt-2 mb-2">Spart bis zu 70% Speicherplatz.</div>
                        <label class="label cursor-pointer" title={ avifTitle }>
                            <span class="label-text">AVIF</span>
                            if prefAvif {
                                <input type="checkbox" name="pref_thumb_avif" class="toggle toggle-primary" checked disabled?={!canAvif} />
                            } else {
                                <input type="checkbox" name="pref_thumb_avif" class="toggle toggle-primary" disabled?={!canAvif} />
                            }
                        </label>
                        <div class="text-xs opacity-70 ml-1 -mt-2 mb-2">Spart bis zu 90% Speicherplatz.</div>
                        if !canWebp || !canAvif {
                            <div class="text-xs opacity-70 mt-2">Hinweis: Einige Formate sind in deinem Paket nicht verfügbar.</div>
                        }
                    </div>

                    <div class="divider"></div>

                    <div class="card-actions justify-end">
                        <a href="/user/profile" class="btn btn-secondary">Zum Profil</a>
                        <button type="submit" class="btn btn-primary">Speichern</button>
                    </div>
                </form>

                <div class="divider"></div>

                <div class="form-control">
                    <h3 class="text-lg font-medium mb-2">API Zugriff</h3>
                    if newAPIKey != "" {
                        <div class="alert alert-info flex flex-col gap-3">
                            <div>
                                <p class="font-semibold">Neuer API-Schlüssel</p>
                                <p class="text-sm opacity-80">Bitte speichere diesen Schlüssel sofort sicher. Aus Sicherheitsgründen wird er später nicht erneut angezeigt.</p>
                                <p class="text-xs opacity-70 mt-1">Der zuvor aktive Schlüssel ist nicht mehr gültig.</p>
                            </div>
                            <div class="join w-full">
                                <input id="user-api-key" type="text" readonly class="input input-bordered join-item font-mono text-sm" value={ newAPIKey } />
                                <button type="button" class="btn btn-primary join-item copy-btn" data-clipboard-target="#user-api-key" aria-label="API-Schlüssel kopieren">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                    } else {
                        if hasAPIKey {
                            <div class="alert alert-soft flex flex-col gap-2">
                                <div>
                                    <span class="text-sm opacity-70">Aktiver Schlüssel</span>
                                    <div class="font-mono text-sm">{ maskedAPIKey }</div>
                                </div>
                                <div class="text-xs opacity-70 flex flex-col gap-1">
                                    if apiKeyCreated != "" {
                                        <span>Erstellt am { apiKeyCreated }</span>
                                    }
                                    if apiKeyLastUsed != "" {
                                        <span>Zuletzt verwendet { apiKeyLastUsed }</span>
                                    } else {
                                        <span>Noch nicht verwendet</span>
                                    }
                                </div>
                                <div class="text-xs opacity-70">Ein neuer Schlüssel ersetzt den bisherigen sofort.</div>
                            </div>
                        } else {
                            <div class="alert alert-soft">
                                <span class="text-sm">Du hast noch keinen API-Schlüssel erstellt.</span>
                            </div>
                        }
                    }

                    <form method="POST" action="/user/settings/api-key" class="mt-2 flex flex-col gap-2">
                        <input type="hidden" name="_csrf" value={ csrfToken }>
                        <button type="submit" class="btn btn-primary">API-Schlüssel generieren</button>
                    </form>

                    if hasAPIKey {
                        <form method="POST" action="/user/settings/api-key/revoke" class="mt-2 flex flex-col gap-2">
                            <input type="hidden" name="_csrf" value={ csrfToken }>
                            <button type="submit" class="btn btn-outline btn-error">API-Schlüssel entfernen</button>
                        </form>
                    }

                    <div class="text-xs opacity-70 mt-2">
                        Sende deinen Schlüssel bei API-Anfragen im Header <span class="font-mono">X-API-Key</span>.
                    </div>
                </div>

            </div>
        </div>
    </section>
}

templ Settings(
    page string,
    fromProtected bool,
    isError bool,
    msg fiber.Map,
    username string,
    plan string,
    cmp templ.Component,
    isAdmin bool,
) {
    @views.Layout(viewmodel.Layout{
        Page:          page,
        FromProtected: fromProtected,
        IsError:       isError,
        Msg:           msg,
        Username:      username,
        IsAdmin:       isAdmin,
        OGViewModel:   nil,
        Plan:          plan,
    }) {
        @cmp
    }
}
